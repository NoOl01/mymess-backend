basePath: /api/v1
definitions:
  models.Login:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  models.Refresh:
    properties:
      access_token:
        type: string
    type: object
  models.Register:
    properties:
      email:
        type: string
      nickname:
        type: string
      password:
        type: string
    type: object
  models.ResetPassword:
    properties:
      code:
        type: integer
      email:
        type: string
    type: object
  models.SendOtp:
    properties:
      email:
        type: string
    type: object
  models.UpdatePassword:
    properties:
      email:
        type: string
      password:
        type: string
      reset_token:
        type: string
    type: object
  models.UpdateProfile:
    properties:
      value:
        type: string
    type: object
info:
  contact: {}
  title: Messenger API
  version: "0.2"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные для входа
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Login'
      produces:
      - application/json
      responses: {}
      summary: Авторизация
      tags:
      - auth
  /auth/my_profile:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - Token: []
      summary: Обновление пароля
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      parameters:
      - description: Обновление токена
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Refresh'
      produces:
      - application/json
      responses: {}
      summary: Refresh
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные регистрации
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Register'
      produces:
      - application/json
      responses: {}
      summary: Регистрация
      tags:
      - auth
  /auth/reset_password:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные для проверки кода
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.ResetPassword'
      produces:
      - application/json
      responses: {}
      summary: Подтвердить OTP код
      tags:
      - auth
  /auth/send_otp:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные для отправки кода на почту
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SendOtp'
      produces:
      - application/json
      responses: {}
      summary: Отправить код на почту
      tags:
      - auth
  /auth/update_password:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные для обновления пароля
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UpdatePassword'
      produces:
      - application/json
      responses: {}
      summary: Обновление пароля
      tags:
      - auth
  /chat/get_chats:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      security:
      - Token: []
      summary: получение списка чатов
      tags:
      - chat
  /chat/history:
    get:
      consumes:
      - application/json
      parameters:
      - description: ChatId
        in: query
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - Token: []
      summary: получение списка чатов
      tags:
      - chat
  /ping:
    get:
      description: Публичный запрос, который клиент отправляет при запуске. Возвращает
        статус сервисов.
      produces:
      - application/json
      responses: {}
      summary: Проверка доступности сервера и версии приложения
      tags:
      - ping
  /profile/info:
    get:
      consumes:
      - application/json
      parameters:
      - description: Username пользователя
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      summary: Получение профиля пользователя по id
      tags:
      - profile
  /profile/update_bio:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные для обновления профиля
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UpdateProfile'
      produces:
      - application/json
      responses: {}
      security:
      - Token: []
      summary: Обновить bio
      tags:
      - profile
  /profile/update_email:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные для обновления профиля
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UpdateProfile'
      produces:
      - application/json
      responses: {}
      security:
      - Token: []
      summary: Обновить nickname
      tags:
      - profile
  /profile/update_nickname:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные для обновления профиля
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UpdateProfile'
      produces:
      - application/json
      responses: {}
      security:
      - Token: []
      summary: Обновить nickname
      tags:
      - profile
  /search/profile_by_id:
    get:
      consumes:
      - application/json
      parameters:
      - description: id пользователя
        in: query
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Поиск пользователей по id
      tags:
      - search
  /search/profiles:
    get:
      consumes:
      - application/json
      parameters:
      - description: Username пользователя
        in: query
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Поиск пользователей по username
      tags:
      - search
  /ws:
    get:
      parameters:
      - description: JWT access token
        in: query
        name: token
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "101":
          description: Switching Protocols
          schema:
            type: string
      summary: WebSocket connect
      tags:
      - web_socket
securityDefinitions:
  Token:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
